name: 'Test kurl_test pull requests'

on:
  pull_request:
    branches:
    - main

env:
  # https://vendor.replicated.com/apps/cd4pe/customer/1liKeLfya3YPpuSoQUAmDLQ4BeL/manage
  CONNECT_LICENSE: ${{ secrets.CONNECT_LICENSE }}
  KUBECTL_VERSION: v1.22.2
  KOTS_VERSION: v1.52.0
  HELM_VERSION: v3.5.2

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install dependencies
        run: bundle install
      - name: Run tests
        run: bundle exec rake unit_test

  task-helm-acceptance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.19
          k3d-args: -p 80:80@loadbalancer -p 443:443@loadbalancer
      - uses: ./.github/actions/install-bolt
      - uses: ./.github/actions/install-k8s-tools
      - name: Install test helm chart
        run: |-
          bolt task run pam_tools::helm_install_chart --targets=localhost chart=./.github/test-chart release='test-release' values='name: testing'
      - name: Check configmap
        run: |
          kubectl get configmap/test-chart-configmap -o yaml | grep 'Hello testing'
      - name: Delete resources
        run: |
          bolt task run pam_tools::delete_k8s_app_resources --targets=localhost kots_slug=test-chart
      - uses: ./.github/actions/validate-no-pods

  plan-install-acceptance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare license
        run: printenv CONNECT_LICENSE > license.yaml
      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.19
          k3d-args: -p 80:80@loadbalancer -p 443:443@loadbalancer
      - uses: ./.github/actions/install-bolt
      - uses: ./.github/actions/install-k8s-tools
      - name: Run install_published plan
        run: |
          bolt plan run pam_tools::install_published targets=localhost license_file="$(pwd)/license.yaml" app_timeout=900 kots_install_options="--skip-preflights=true" allocated_memory_in_gigabytes=7
      - name: Verify app ready
        run: |
          # diagnostics
          kubectl get pods
          kubectl kots get app -n default
          # fail if not ready
          kubectl kots get app -n default | grep -q 'cd4pe.*ready'
      - name: Test idempotency
        run: |
          bolt plan run pam_tools::install_published targets=localhost license_file="$(pwd)/license.yaml" app_timeout=900 kots_install_options="--skip-preflights=true" allocated_memory_in_gigabytes=7
      - name: Run teardown plan
        run: |
          bolt plan run pam_tools::teardown targets=localhost kots_slug=cd4pe remove_app_from_console=true delete_kotsadm=true
      - uses: ./.github/actions/validate-no-pods
